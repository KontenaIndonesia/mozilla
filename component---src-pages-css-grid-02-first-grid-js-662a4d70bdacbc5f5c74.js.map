{"version":3,"sources":["webpack:///component---src-pages-css-grid-02-first-grid-js-662a4d70bdacbc5f5c74.js","webpack:///./src/pages/css-grid/02-first-grid.js"],"names":["webpackJsonp","222","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_Main","_Main2","_CodeBlock","_CodeBlock2","_DevHomework","_DevHomework2","_CodepenLink","_CodepenLink2","_DownloadLink","_DownloadLink2","_VideoPlayer","_VideoPlayer2","Tutorial","createElement","videoId","className","link","Homework","title","content","currentPageNum","tutorial","homework"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAgCA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GA9BvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,GDWKM,EAAUL,EAAuBI,GCVtCE,EAAAP,EAAA,IDcKQ,EAASP,EAAuBM,GCbrCE,EAAAT,EAAA,IDiBKU,EAAcT,EAAuBQ,GChB1CE,EAAAX,EAAA,IDoBKY,EAAgBX,EAAuBU,GCnB5CE,EAAAb,EAAA,IDuBKc,EAAgBb,EAAuBY,GCtB5CE,EAAAf,EAAA,ID0BKgB,EAAiBf,EAAuBc,GCzB7CE,EAAAjB,EAAA,ID6BKkB,EAAgBjB,EAAuBgB,GC1BtCE,EAAW,iBACfb,GAAAF,QAAAgB,cAAA,WACEd,EAAAF,QAAAgB,cAAAF,EAAAd,SAAaiB,QAAQ,gBAErBf,EAAAF,QAAAgB,cAAA,6BAEAd,EAAAF,QAAAgB,cAAA,2BACAd,EAAAF,QAAAgB,cAAA,kGAEed,EAAAF,QAAAgB,cAAA,6BAFf,mFAG+Cd,EAAAF,QAAAgB,cAAA,yBAH/C,KAMAd,EAAAF,QAAAgB,cAAA,qCACAd,EAAAF,QAAAgB,cAAA,0GAEsBd,EAAAF,QAAAgB,cAAA,qCAFtB,OAE6D,IAC3Dd,EAAAF,QAAAgB,cAAA,kCAHF,uLAQAd,EAAAF,QAAAgB,cAAAV,EAAAN,QAAA,8FAOAE,EAAAF,QAAAgB,cAAA,6DAEAd,EAAAF,QAAAgB,cAAAV,EAAAN,QAAA,iEAMAE,EAAAF,QAAAgB,cAAA,8CAEAd,EAAAF,QAAAgB,cAAA,0BAEAd,EAAAF,QAAAgB,cAAA,6FAKAd,EAAAF,QAAAgB,cAAAV,EAAAN,QAAA,kCAMAE,EAAAF,QAAAgB,cAAA,wKAGcd,EAAAF,QAAAgB,cAAA,+BAHd,QAG+Cd,EAAAF,QAAAgB,cAAA,4BAA0B,IAHzE,uBAOAd,EAAAF,QAAAgB,cAAA,+DAEAd,EAAAF,QAAAgB,cAAAV,EAAAN,QAAA,8PAaAE,EAAAF,QAAAgB,cAAA,uEAEAd,EAAAF,QAAAgB,cAAAV,EAAAN,QAAA,wJAUAE,EAAAF,QAAAgB,cAAA,gCAEAd,EAAAF,QAAAgB,cAAA,OAAKE,UAAU,eACbhB,EAAAF,QAAAgB,cAAA,OAAKE,UAAU,SACfhB,EAAAF,QAAAgB,cAAA,OAAKE,UAAU,SACfhB,EAAAF,QAAAgB,cAAA,OAAKE,UAAU,SACfhB,EAAAF,QAAAgB,cAAA,OAAKE,UAAU,SACfhB,EAAAF,QAAAgB,cAAA,OAAKE,UAAU,SACfhB,EAAAF,QAAAgB,cAAA,OAAKE,UAAU,UAGjBhB,EAAAF,QAAAgB,cAAAN,EAAAV,SAAamB,KAAK,sDAIhBC,EAAW,iBACflB,GAAAF,QAAAgB,cAAAR,EAAAR,SAAaqB,MAAM,sCACjBnB,EAAAF,QAAAgB,cAAA,sJAEgDd,EAAAF,QAAAgB,cAAA,wBAFhD,qBAGEd,EAAAF,QAAAgB,cAAA,+BAHF,QAGmCd,EAAAF,QAAAgB,cAAA,4BAHnC,kEAOAd,EAAAF,QAAAgB,cAAA,gNAGa,IACXd,EAAAF,QAAAgB,cAAAJ,EAAAZ,SAAcsB,QAAQ,kBAAtB,sCAJF,4DAQApB,EAAAF,QAAAgB,cAAA,2FD0GHrB,GAAQK,QCtGM,iBAAME,GAAAF,QAAAgB,cAAAZ,EAAAJ,SAAMuB,eAAgB,EAAGC,SAAUtB,EAAAF,QAAAgB,cAACD,EAAD,MAAcU,SAAUvB,EAAAF,QAAAgB,cAACI,EAAD,SD0G/E1B,EAAOC,QAAUA,EAAiB","file":"component---src-pages-css-grid-02-first-grid-js-662a4d70bdacbc5f5c74.js","sourcesContent":["webpackJsonp([234804948918196],{\n\n/***/ 222:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _Main = __webpack_require__(17);\n\t\n\tvar _Main2 = _interopRequireDefault(_Main);\n\t\n\tvar _CodeBlock = __webpack_require__(15);\n\t\n\tvar _CodeBlock2 = _interopRequireDefault(_CodeBlock);\n\t\n\tvar _DevHomework = __webpack_require__(12);\n\t\n\tvar _DevHomework2 = _interopRequireDefault(_DevHomework);\n\t\n\tvar _CodepenLink = __webpack_require__(27);\n\t\n\tvar _CodepenLink2 = _interopRequireDefault(_CodepenLink);\n\t\n\tvar _DownloadLink = __webpack_require__(16);\n\t\n\tvar _DownloadLink2 = _interopRequireDefault(_DownloadLink);\n\t\n\tvar _VideoPlayer = __webpack_require__(57);\n\t\n\tvar _VideoPlayer2 = _interopRequireDefault(_VideoPlayer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Tutorial = function Tutorial() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(_VideoPlayer2.default, { videoId: 'I32g1VYTOAE' }),\n\t    _react2.default.createElement(\n\t      'h2',\n\t      null,\n\t      'Your First Grid'\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      'Create a grid'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'The first thing we want to do is create a grid container. We can do this by declaring ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'display: grid'\n\t      ),\n\t      ' on the container element. In this example we are using a div with the class of ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'container'\n\t      ),\n\t      '.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      'Define rows and columns'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'There are several ways to define rows and columns. For our first grid, we will use properties ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-template-columns'\n\t      ),\n\t      ' and',\n\t      \" \",\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-template-rows'\n\t      ),\n\t      '. These properties allow us to define the size of the rows and columns for our grid. To create two fixed-height rows of 150px and three fixed-width columns of 150px, simply write:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\ngrid-template-columns: 150px 150px 150px;\\ngrid-template-rows: 150px 150px;\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'To add a fourth column that is 70px wide, write:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\ngrid-template-columns: 150px 150px 150px 70px;\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      '...and so on to add more columns.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'h4',\n\t      null,\n\t      'Add a gutter'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Adding a gutter to your grid is amazingly easy with CSS Grid Layout. Simply add:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\ngrid-gap: 1rem;\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'That simple line gives you an equal-sized gutter between all rows and columns. To define the gutter size for columns and rows individually, you can use the ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-column-gap'\n\t      ),\n\t      ' and ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-row-gap'\n\t      ),\n\t      \" \",\n\t      'properties instead.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Now let\\'s put that all together. Here is our HTML:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n<div class=\"container\">\\n  <div class=\"item item1\"></div>\\n  <div class=\"item item2\"></div>\\n  <div class=\"item item3\"></div>\\n  <div class=\"item item4\"></div>\\n  <div class=\"item item5\"></div>\\n  <div class=\"item item6\"></div>\\n</div>\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'With just a few lines of CSS, we can create a simple grid:'\n\t    ),\n\t    _react2.default.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      '\\n.container {\\n  display: grid;\\n  grid-template-columns: 150px 150px 150px;\\n  grid-template-rows: 150px 150px;\\n  grid-gap: 1rem;\\n}\\n      '\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Here is the result:'\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'container-2' },\n\t      _react2.default.createElement('div', { className: 'item' }),\n\t      _react2.default.createElement('div', { className: 'item' }),\n\t      _react2.default.createElement('div', { className: 'item' }),\n\t      _react2.default.createElement('div', { className: 'item' }),\n\t      _react2.default.createElement('div', { className: 'item' }),\n\t      _react2.default.createElement('div', { className: 'item' })\n\t    ),\n\t    _react2.default.createElement(_CodepenLink2.default, { link: 'https://codepen.io/mozilladevelopers/pen/veXQmp' })\n\t  );\n\t};\n\t\n\tvar Homework = function Homework() {\n\t  return _react2.default.createElement(\n\t    _DevHomework2.default,\n\t    { title: 'Firefox DevTools + CSS Grid Layout' },\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Amazing right? Inspect the grid above with your browser\\'s developer tools. Try changing the column width, or the row height. Swap out the ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-gap'\n\t      ),\n\t      ' property with the',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-column-gap'\n\t      ),\n\t      ' and ',\n\t      _react2.default.createElement(\n\t        'code',\n\t        null,\n\t        'grid-row-gap'\n\t      ),\n\t      ' properties and play around with different widths and heights.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Having a good set of developer tools when working with CSS Grid Layout is essential. Firefox has some fantastic features that are specifically built to help you create and design grids. Intrigued?',\n\t      ' ',\n\t      _react2.default.createElement(\n\t        _DownloadLink2.default,\n\t        { content: 'cssgrid-page-2' },\n\t        'Download Firefox Developer Edition'\n\t      ),\n\t      ' to get the browser with the best CSS Grid Layout tools.'\n\t    ),\n\t    _react2.default.createElement(\n\t      'p',\n\t      null,\n\t      'Click to the next section to learn about Firefox\\'s new CSS Grid Layout panel.'\n\t    )\n\t  );\n\t};\n\t\n\texports.default = function () {\n\t  return _react2.default.createElement(_Main2.default, { currentPageNum: 2, tutorial: _react2.default.createElement(Tutorial, null), homework: _react2.default.createElement(Homework, null) });\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-css-grid-02-first-grid-js-662a4d70bdacbc5f5c74.js","import React from 'react';\nimport Main from './components/_Main';\nimport CodeBlock from '../../components/CodeBlock';\nimport DevHomework from '../../components/layout/DevHomework';\nimport CodepenLink from '../../components/CodepenLink';\nimport DownloadLink from '../../components/DownloadLink';\nimport VideoPlayer from '../../components/VideoPlayer';\n\n\nconst Tutorial = () => (\n  <div>\n    <VideoPlayer videoId=\"I32g1VYTOAE\" />\n\n    <h2>Your First Grid</h2>\n\n    <h4>Create a grid</h4>\n    <p>\n      The first thing we want to do is create a grid container. We can do this\n      by declaring <code>display: grid</code> on the container element. In this\n      example we are using a div with the class of <code>container</code>.\n    </p>\n\n    <h4>Define rows and columns</h4>\n    <p>\n      There are several ways to define rows and columns. For our first grid, we\n      will use properties <code>grid-template-columns</code> and{\" \"}\n      <code>grid-template-rows</code>. These properties allow us to define the\n      size of the rows and columns for our grid. To create two fixed-height rows\n      of 150px and three fixed-width columns of 150px, simply write:\n    </p>\n\n    <CodeBlock>\n      {`\ngrid-template-columns: 150px 150px 150px;\ngrid-template-rows: 150px 150px;\n      `}\n    </CodeBlock>\n\n    <p>To add a fourth column that is 70px wide, write:</p>\n\n    <CodeBlock>\n      {`\ngrid-template-columns: 150px 150px 150px 70px;\n      `}\n    </CodeBlock>\n\n    <p>...and so on to add more columns.</p>\n\n    <h4>Add a gutter</h4>\n\n    <p>\n      Adding a gutter to your grid is amazingly easy with CSS Grid Layout.\n      Simply add:\n    </p>\n\n    <CodeBlock>\n      {`\ngrid-gap: 1rem;\n      `}\n    </CodeBlock>\n\n    <p>\n      That simple line gives you an equal-sized gutter between all rows and\n      columns. To define the gutter size for columns and rows individually, you\n      can use the <code>grid-column-gap</code> and <code>grid-row-gap</code>{\" \"}\n      properties instead.\n    </p>\n\n    <p>Now let's put that all together. Here is our HTML:</p>\n\n    <CodeBlock>\n      {`\n<div class=\"container\">\n  <div class=\"item item1\"></div>\n  <div class=\"item item2\"></div>\n  <div class=\"item item3\"></div>\n  <div class=\"item item4\"></div>\n  <div class=\"item item5\"></div>\n  <div class=\"item item6\"></div>\n</div>\n      `}\n    </CodeBlock>\n\n    <p>With just a few lines of CSS, we can create a simple grid:</p>\n\n    <CodeBlock>\n      {`\n.container {\n  display: grid;\n  grid-template-columns: 150px 150px 150px;\n  grid-template-rows: 150px 150px;\n  grid-gap: 1rem;\n}\n      `}\n    </CodeBlock>\n    <p>Here is the result:</p>\n\n    <div className=\"container-2\">\n      <div className=\"item\" />\n      <div className=\"item\" />\n      <div className=\"item\" />\n      <div className=\"item\" />\n      <div className=\"item\" />\n      <div className=\"item\" />\n    </div>\n\n    <CodepenLink link=\"https://codepen.io/mozilladevelopers/pen/veXQmp\" />\n  </div>\n);\n\nconst Homework = () => (\n  <DevHomework title=\"Firefox DevTools + CSS Grid Layout\">\n    <p>\n      Amazing right? Inspect the grid above with your browser's developer tools. Try changing the\n      column width, or the row height. Swap out the <code>grid-gap</code> property with the\n      <code>grid-column-gap</code> and <code>grid-row-gap</code> properties and play around with\n      different widths and heights.\n    </p>\n\n    <p>\n      Having a good set of developer tools when working with CSS Grid Layout is essential. Firefox\n      has some fantastic features that are specifically built to help you create and design grids.\n      Intrigued?{' '}\n      <DownloadLink content=\"cssgrid-page-2\">Download Firefox Developer Edition</DownloadLink> to get\n      the browser with the best CSS Grid Layout tools.\n    </p>\n\n    <p>Click to the next section to learn about Firefox's new CSS Grid Layout panel.</p>\n  </DevHomework>\n);\n\nexport default () => <Main currentPageNum={2} tutorial={<Tutorial />} homework={<Homework />} />;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/css-grid/02-first-grid.js"],"sourceRoot":""}